{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useState, useEffect } from \"react\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { fetchQrCode } from \"./http\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var prefix_val = 'azmobileapp-';\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    hasPermission = _useState2[0],\n    setHasPermission = _useState2[1];\n  var _useState3 = useState(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    scanned = _useState4[0],\n    setScanned = _useState4[1];\n  var _useState5 = useState(false),\n    _useState6 = _slicedToArray(_useState5, 2),\n    verifiedScan = _useState6[0],\n    setVerifiedScan = _useState6[1];\n  var _useState7 = useState(\"Not Scanned Yet\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    text = _useState8[0],\n    setText = _useState8[1];\n  var askForCameraPermission = function askForCameraPermission() {\n    (function _callee() {\n      var _await$BarCodeScanner, status;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(BarCodeScanner.requestPermissionsAsync());\n            case 2:\n              _await$BarCodeScanner = _context.sent;\n              status = _await$BarCodeScanner.status;\n              setHasPermission(status == \"granted\");\n              console.log(hasPermission);\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  };\n  function getFetchQrCode() {\n    var get_data;\n    return _regeneratorRuntime.async(function getFetchQrCode$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            console.log('do get fetch');\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetchQrCode(\"6c6d1355-c138-4298-9b2c-c70a2056378a\"));\n          case 3:\n            get_data = _context2.sent;\n            console.log(get_data);\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n  useEffect(function () {\n    getFetchQrCode();\n  }, []);\n\n  var handleBarCodeScanned = function handleBarCodeScanned(_ref) {\n    var type = _ref.type,\n      data = _ref.data;\n    if (data.indexOf(prefix_val) > -1) {\n      setScanned(true);\n      setText('Please wait while we get your cart information.');\n      var ref1 = data.split(prefix_val)[1].split('|')[0];\n      var return_data = fetchQrCode(ref1);\n      console.log(return_data);\n    }\n    console.log('Type: ', type, '\\nData', data);\n  };\n  if (hasPermission === null) {\n    return _jsx(View, {\n      style: styles.container,\n      children: _jsx(Text, {\n        children: \"Requesting for camera permission\"\n      })\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(View, {\n      style: styles.barcodebox,\n      children: _jsx(BarCodeScanner, {\n        onBarCodeScanned: scanned ? undefined : handleBarCodeScanned,\n        style: {\n          height: 400,\n          width: 400\n        }\n      })\n    }), _jsx(Text, {\n      style: styles.maintext,\n      children: text\n    }), scanned && _jsx(Button, {\n      title: 'Scan again>',\n      onPress: function onPress() {\n        return setScanned(false);\n      },\n      color: \"tomato\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  barcodebox: {\n    backgroundColor: 'tomato',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 300,\n    width: 300,\n    overflow: 'hidden',\n    borderRadius: 30\n  },\n  maintext: {\n    fontSize: 16,\n    margin: 20\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","BarCodeScanner","fetchQrCode","App","prefix_val","hasPermission","setHasPermission","scanned","setScanned","verifiedScan","setVerifiedScan","text","setText","askForCameraPermission","requestPermissionsAsync","status","console","log","getFetchQrCode","get_data","handleBarCodeScanned","type","data","indexOf","ref1","split","return_data","styles","container","barcodebox","undefined","height","width","maintext","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","overflow","borderRadius","fontSize","margin"],"sources":["C:/Users/AZ Digital/Desktop/zaidreact/fecterminal/App.js"],"sourcesContent":["import { StyleSheet, Text, View, Button } from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport { fetchQrCode } from \"./http\";\n\nexport default function App() {\n  const prefix_val = 'azmobileapp-'\n  const [hasPermission, setHasPermission] = useState(null);\n  const [scanned, setScanned] = useState(false);\n  const [verifiedScan, setVerifiedScan] = useState(false);\n  const [text, setText] = useState(\"Not Scanned Yet\");\n  const askForCameraPermission = () => {\n    (async () => {\n      const { status } = await BarCodeScanner.requestPermissionsAsync();\n      setHasPermission(status == \"granted\");\n      console.log(hasPermission)\n    })()\n  }\n  async function getFetchQrCode(){\n    console.log('do get fetch')\n    let get_data = await fetchQrCode(\"6c6d1355-c138-4298-9b2c-c70a2056378a\");\n    console.log(get_data);\n  }\n  //Request Camera permission\n  useEffect(()=> {\n    // askForCameraPermission();\n    getFetchQrCode()\n  },[])\n\n  //when barcode is scanned\n  const handleBarCodeScanned = ({type,data}) => {\n    if(data.indexOf(prefix_val) > -1){\n      setScanned(true);\n      setText('Please wait while we get your cart information.');\n      let ref1 = data.split(prefix_val)[1].split('|')[0]\n      let return_data = fetchQrCode(ref1);\n      console.log(return_data);\n    }\n\n    console.log('Type: ', type , '\\nData' , data)\n  }\n  //check permissions and return the screens\n  if(hasPermission === null){\n    return (\n      <View style={styles.container}>\n        <Text>Requesting for camera permission</Text>\n      </View>\n    );\n  }\n  return (\n    <View style={styles.container}>\n      <View style={styles.barcodebox}>\n        <BarCodeScanner\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\n        style={{height:400,width:400}}\n        />\n      </View>\n      <Text style={styles.maintext}>{text}</Text>\n      {scanned && <Button title={'Scan again>'} onPress={()=> setScanned(false)} color='tomato'/>}\n    </View>\n  );\n}\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  barcodebox:{\n    backgroundColor: 'tomato',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 300,\n    width: 300,\n    overflow: 'hidden',\n    borderRadius: 30,\n\n  },\n  maintext:{\n    fontSize: 16,\n    margin: 20\n  }\n});\n"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,cAAc,QAAQ,sBAAsB;AACrD,SAASC,WAAW;AAAiB;AAAA;AAErC,eAAe,SAASC,GAAG,GAAG;EAC5B,IAAMC,UAAU,GAAG,cAAc;EACjC,gBAA0CL,QAAQ,CAAC,IAAI,CAAC;IAAA;IAAjDM,aAAa;IAAEC,gBAAgB;EACtC,iBAA8BP,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAtCQ,OAAO;IAAEC,UAAU;EAC1B,iBAAwCT,QAAQ,CAAC,KAAK,CAAC;IAAA;IAAhDU,YAAY;IAAEC,eAAe;EACpC,iBAAwBX,QAAQ,CAAC,iBAAiB,CAAC;IAAA;IAA5CY,IAAI;IAAEC,OAAO;EACpB,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAsB,GAAS;IACnC,CAAC;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,iCAC0BZ,cAAc,CAACa,uBAAuB,EAAE;YAAA;cAAA;cAAzDC,MAAM,yBAANA,MAAM;cACdT,gBAAgB,CAACS,MAAM,IAAI,SAAS,CAAC;cACrCC,OAAO,CAACC,GAAG,CAACZ,aAAa,CAAC;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAC3B,GAAG;EACN,CAAC;EACD,SAAea,cAAc;IAAA;IAAA;MAAA;QAAA;UAAA;YAC3BF,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;YAAA;YAAA,iCACNf,WAAW,CAAC,sCAAsC,CAAC;UAAA;YAApEiB,QAAQ;YACZH,OAAO,CAACC,GAAG,CAACE,QAAQ,CAAC;UAAC;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA;EAGxBnB,SAAS,CAAC,YAAK;IAEbkB,cAAc,EAAE;EAClB,CAAC,EAAC,EAAE,CAAC;;EAGL,IAAME,oBAAoB,GAAG,SAAvBA,oBAAoB,OAAoB;IAAA,IAAfC,IAAI,QAAJA,IAAI;MAACC,IAAI,QAAJA,IAAI;IACtC,IAAGA,IAAI,CAACC,OAAO,CAACnB,UAAU,CAAC,GAAG,CAAC,CAAC,EAAC;MAC/BI,UAAU,CAAC,IAAI,CAAC;MAChBI,OAAO,CAAC,iDAAiD,CAAC;MAC1D,IAAIY,IAAI,GAAGF,IAAI,CAACG,KAAK,CAACrB,UAAU,CAAC,CAAC,CAAC,CAAC,CAACqB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAClD,IAAIC,WAAW,GAAGxB,WAAW,CAACsB,IAAI,CAAC;MACnCR,OAAO,CAACC,GAAG,CAACS,WAAW,CAAC;IAC1B;IAEAV,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEI,IAAI,EAAG,QAAQ,EAAGC,IAAI,CAAC;EAC/C,CAAC;EAED,IAAGjB,aAAa,KAAK,IAAI,EAAC;IACxB,OACE,KAAC,IAAI;MAAC,KAAK,EAAEsB,MAAM,CAACC,SAAU;MAAA,UAC5B,KAAC,IAAI;QAAA;MAAA;IAAwC,EACxC;EAEX;EACA,OACE,MAAC,IAAI;IAAC,KAAK,EAAED,MAAM,CAACC,SAAU;IAAA,WAC5B,KAAC,IAAI;MAAC,KAAK,EAAED,MAAM,CAACE,UAAW;MAAA,UAC7B,KAAC,cAAc;QACf,gBAAgB,EAAEtB,OAAO,GAAGuB,SAAS,GAAGV,oBAAqB;QAC7D,KAAK,EAAE;UAACW,MAAM,EAAC,GAAG;UAACC,KAAK,EAAC;QAAG;MAAE;IAC5B,EACG,EACP,KAAC,IAAI;MAAC,KAAK,EAAEL,MAAM,CAACM,QAAS;MAAA,UAAEtB;IAAI,EAAQ,EAC1CJ,OAAO,IAAI,KAAC,MAAM;MAAC,KAAK,EAAE,aAAc;MAAC,OAAO,EAAE;QAAA,OAAKC,UAAU,CAAC,KAAK,CAAC;MAAA,CAAC;MAAC,KAAK,EAAC;IAAQ,EAAE;EAAA,EACtF;AAEX;AAIA,IAAMmB,MAAM,GAAGO,UAAU,CAACC,MAAM,CAAC;EAC/BP,SAAS,EAAE;IACTQ,IAAI,EAAE,CAAC;IACPC,eAAe,EAAE,MAAM;IACvBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDV,UAAU,EAAC;IACTQ,eAAe,EAAE,QAAQ;IACzBC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE,QAAQ;IACxBR,MAAM,EAAE,GAAG;IACXC,KAAK,EAAE,GAAG;IACVQ,QAAQ,EAAE,QAAQ;IAClBC,YAAY,EAAE;EAEhB,CAAC;EACDR,QAAQ,EAAC;IACPS,QAAQ,EAAE,EAAE;IACZC,MAAM,EAAE;EACV;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module"}